package com.mvc2;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;

import com.util.HashMapBinder;
import com.vo.BoardMasterVO;

public class BoardController implements Controller {
	Logger logger = Logger.getLogger(BoardController.class);
	String path = null;
	String requestName = null;
	String crud = null;
	BoardLogic bLogic = null; 
	int tot = 0;
	/*
	 * 현재 게시판 목록을 조회할 때 boardList.jsp를 호출하였다.
	 * 이렇게 호출하면 ActionServlet을 경유하지 않는 것이다. - 세션값이 없다.
	 * 그럼 어떻게 경유하도록 할 것인가? test.mo -> boardList.jsp
	 * 위와 같이 하면 객체 주입이 일어난다. (생성자 호출이 일어남)
	 * 생성자 안에서 전체 레코드를 가져 오자. ->세션 미리 담기
	 * 생정자 안에는 req가 없다. 그래서 excute(req,res)에서 session값을 담는다.
	 * 페이지 요청을 표준 서블릿으로 처리를 받아서는 세션값에 사용이 불가함.
	 * ->ActionServlet경유하라.
	 */
	public BoardController(String requestName, String crud) {
		this.requestName = requestName;
		this.crud = crud;
		bLogic = new BoardLogic();
		BoardMasterVO bmVO = new BoardMasterVO();
		tot = bLogic.getTot(bmVO);
	}

	@Override
	public String execute(HttpServletRequest req, HttpServletResponse res) throws Exception {
		logger.info("execute(req,res) 호출");
		HttpSession session = req.getSession();
		session.setAttribute("s_tot", tot);//tot는 생성자에서 처리
		logger.info("총 레코드 수: "+session.getAttribute("s_tot"));
		if("boardView".equals(crud)) {
			path = "redirect:boardList.jsp";
		}
		else if("boardList".equals(crud))
		{
			logger.info("crud=boardList일 경우");
			List<Map<String, Object>> boardList = null;
			//조회시 검색 조건에 해당하는 값을 담는 변수
			BoardMasterVO bmVO = new BoardMasterVO();
			//콤보박스에서 선택한 value값이 담김 - bm_title, bm_content, bm_writer
			String cb_search = req.getParameter("cb_search");
			logger.info("cb_search: "+cb_search);
			bmVO.setCb_search(cb_search);
			//사용자가 입력한 문자열
			String keyword = req.getParameter("keyword");
			logger.info("keyword: "+keyword);
			bmVO.setKeyword(keyword);
			//페이지처리 초기값 담기
			int pageNumber = 0;
			int pageSize   = 0;
			if(req.getParameter("pageNumber")!=null) {
				pageNumber = Integer.parseInt(req.getParameter("pageNumber"));
			}
			if(req.getParameter("pageSize")!=null) {
				pageSize = Integer.parseInt(req.getParameter("pageSize"));
			}
			bmVO.setPageNumber(pageNumber);
			bmVO.setPageSize(pageSize);
			logger.info("pageNumber: "+pageNumber+", pageSize: "+pageSize);
			boardList =	bLogic.boardList(bmVO);
			req.setAttribute("boardList", boardList);
			path = "forward:jsonBoardList.jsp";
		}
		else if("boardDetail".equals(crud))
		{
			logger.info("crud=boardDetail일 경우");
			/*
			 * 전체조회 혹은 조건조회와 같은 로직을 타도 되지만 응답이 나가는 페이지가
			 * 다르므로 로직과 Dao는 같이 사용하고 컨트롤계층만 따로 분리하였다.
			 * if문을 사용해서 같은 로직을 태워도 되겠지만 유지보수를 생각했을 때
			 * 1:1로 대응하는 방법이 유리하기 때문에 컨트롤계층만 분리함. 
			 */
			List<Map<String, Object>> boardDetail = null;
			BoardMasterVO bmVO = new BoardMasterVO();
			if(req.getParameter("bm_no")!=null) {
				bmVO.setBm_no(Integer.parseInt(req.getParameter("bm_no")));				
			}
			boardDetail = bLogic.boardList(bmVO);
			req.setAttribute("boardDetail", boardDetail);
			path = "forward:read.jsp";
		}
		else if("boardAdd".equals(crud))
		{
			logger.info("crud=boardAdd일 경우");
			int result = 0;
			Map<String, Object> pMap = new HashMap<>();
			HashMapBinder hmb = new HashMapBinder(req);
			hmb.multiBind(pMap);
			//hmb.bindPost(pMap);
			logger.info("제목: "+pMap.get("bm_title"));
			logger.info("내용: "+pMap.get("bm_content"));
			result = bLogic.boardAdd(pMap);
			if(result == 1) {
				path = "redirect:/board/boardList.jsp";
			}else {
				path = "redirect:/board/boardAddFail.jsp";
			}
		}
		else if("boardUpd".equals(crud))
		{
			logger.info("수정");
			Map<String, Object> pMap = new HashMap<>();
			HashMapBinder hmb = new HashMapBinder(req);
			hmb.bind(pMap);
			int result = 0;
			result = bLogic.boardUpd(pMap);
			path = "forward:boardList.jsp";
		}
		else if("boardDel".equals(crud))
		{
			logger.info("삭제");
			Map<String, Object> pMap = new HashMap<>();
			HashMapBinder hmb = new HashMapBinder(req);
			hmb.bind(pMap);
			int result = 0;
			result = bLogic.boardDel(pMap);
			path = "forward:boardList.jsp";
		}
		//return null;//NullPointerException
		//return "";//ArrayIndexOutofBoundException
		return path;
	}

}
