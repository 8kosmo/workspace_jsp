<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
<!-- 
web.xml은 배치서술자 파일로써 서버가 기동할 때 먼저 스캔이 된다.
이 때 클래스 정보도 스캔을 하므로 패키지명이나 클래스명이 다르면 에러발생
-> 에러가 발생하면 무조건 404
서버가 비정상이면 아무것도 요청할 수 없다.
 -->
 <!-- 로그 정보는 하나의 프로젝트에서 공통관리되면 되므로 서버가 기동될 때
 	읽어서 서버가 종료될 때 까지 유지되면 될것이다.
 		WEB-INF 아래는 url로 접근이 불가
 		a)classes - 자바클래스에 대한 컴파일이 된 파일이 담김
 		이 폴더는 컴파일이 일어 날 때 마다 삭제 되었다가 다시 배포됨.ㄴ
 		b)lib - 오픈소스에 대한 XXX.jar배포(자바클래스) 
  -->
	<context-param>
	<param-name>log4jConfigLocation</param-name>
	<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param>
		<servlet>
		<servlet-name>POJO_MVC22</servlet-name>
		<servlet-class>com.mvc2.ActionServlet</servlet-class>	
	</servlet>
	<servlet-mapping>
		<servlet-name>POJO_MVC22</servlet-name>
		<url-pattern>*.mo</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>POJO_MVC1</servlet-name>
		<servlet-class>com.mvc1.FrontController</servlet-class>	
	</servlet>
	<servlet-mapping>
		<servlet-name>POJO_MVC1</servlet-name>
		<url-pattern>*.kos</url-pattern>
	</servlet-mapping>
  	<servlet>
		<servlet-name>CookieLogin</servlet-name>
		<servlet-class>com.ch09.CookieServlet</servlet-class>	
	</servlet>
	<servlet-mapping>
		<servlet-name>CookieLogin</servlet-name>
		<url-pattern>/ch09/login.do</url-pattern>
	</servlet-mapping>
	<!-- <error-page>
		<error-code>404</error-code>
		<location>/error/error404.jsp</location>
	</error-page> -->
	<servlet>
		<servlet-name>Test</servlet-name>
		<servlet-class>com.basic.RequestTest</servlet-class>
	</servlet>	
	<servlet-mapping>
		<servlet-name>Test</servlet-name>
		<url-pattern>/basic/requestTest.do</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>ch05Member</servlet-name>
		<servlet-class>com.ch05.MemberServlet</servlet-class>
	</servlet>	
	<servlet-mapping>
		<servlet-name>ch05Member</servlet-name>
		<url-pattern>/ch05/memberList.do</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>a</servlet-name>
		<servlet-class>com.basic.LoginServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>a</servlet-name>
		<url-pattern>/login.nhn</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>Ch03Pet</servlet-name>
		<servlet-class>com.ch3.PetServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>Ch03Pet</servlet-name>
		<url-pattern>/ch3/petChoice.do</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>ServletTest</servlet-name>
		<servlet-class>com.basic.HelloServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ServletTest</servlet-name>
		<url-pattern>/hello.do</url-pattern>
	</servlet-mapping>
<!-- 이 프ㅡ로젝트에서 세션 타임을 디폴트로 정할 수 있다. 분다위 작성함-->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
<!-- 커넥션 풀 이름 등록하기 -->
	<resource-ref>
		<description>Connection</description>
		<res-ref-name>jdbc/dbPool</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>	
</web-app>