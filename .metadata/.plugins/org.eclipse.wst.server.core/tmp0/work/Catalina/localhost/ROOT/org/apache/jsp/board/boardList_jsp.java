/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2019-08-12 07:56:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/common/JEasyUICommon.jsp", Long.valueOf(1564466224729L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	int tot = 0;
	if(session.getAttribute("s_tot")!=null){
		tot = Integer.parseInt(session.getAttribute("s_tot").toString());
	}
	out.print("tot:"+tot);

      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("\t화면처리를 태그로 할 때와 스크립트로 할 때\r\n");
      out.write("\t1.태그안에 코드를 작성하면 디자인과 코드가 분리가 안되서 가독성이 떨어짐.\r\n");
      out.write("\t2.스크립트로 처리할 때 화면에서 코드가 분리됨(이벤트 처리나 DOM조작하는 코드작성시 접근성이 좋다)\r\n");
      out.write("\t3.화면과 스크립트 코드를 분리하게 되면 react적용시 라이프 사이클에 따라 코드 적용이 용이함.\r\n");
      out.write("\t -->\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>MVC패턴을 적용한 계층형 게시판</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/default/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/icon.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/demo/demo.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/commons.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery.cookie.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t//var tb_value;\r\n");
      out.write("\tfunction addAction() {\r\n");
      out.write("\t\t$(\"#f_boardAdd\").attr(\"method\",\"post\");\r\n");
      out.write("\t\t$(\"#f_boardAdd\").attr(\"action\",\"/board/test.mo?crud=boardAdd\");\r\n");
      out.write("\t\t$(\"#f_boardAdd\").submit();\r\n");
      out.write("\t}\r\n");
      out.write("/*\r\n");
      out.write("학습목표\r\n");
      out.write("나는 오라클서버에서 조회된 결과를 담은 List<Map>을 화면(datagrid)에 출력을 내보낼 수 있다.\r\n");
      out.write("화면(DOM구성)과 Java코드가 만나는 부분에 대한 처리 방법에 대해 설명하고 코드에 적용할 수 있다.\r\n");
      out.write("화면은 html로 그리지만 조회된 결과를 html에 반영하기 위해 DOM을 조작하는 방법에 대해 말 할 수 있다.\r\n");
      out.write("그 둘 사이에서 json의 역할에 대해서 설명 할 수 있다.\r\n");
      out.write("\r\n");
      out.write("결론\r\n");
      out.write("화면을 조작하는 여러가지 방법에 대한 경험을 가지고 다양한 UI솔루션이 제공하는 컴포넌트에\r\n");
      out.write("조회된 결과를 반영할 수 있도록 연습해 두자.\r\n");
      out.write("각 device 마다 혹은 시스템마다 서로 다른 UI솔루션을 선택하고 사용할 수 있으므로\r\n");
      out.write("여러가지 경우에 대해 미리 생각해 봄으로써 UI솔루션이 javascript기반이거나 xml기반 혹은\r\n");
      out.write("안드로이드에서 적용할 수 있도록 실습해 볼 것.\r\n");
      out.write(" */\r\n");
      out.write("\tfunction boardList(){//태그 조작(DOM조작)\r\n");
      out.write("\t\tcb_value=user_combo;\r\n");
      out.write("\t\t//선택한 콤보에 대한 키워드\r\n");
      out.write("\t\ttb_value=$(\"#keyword\").val();\r\n");
      out.write("\t\t//alert(cb_value);\r\n");
      out.write("\t\t//alert(tb_value);\r\n");
      out.write("\t\t$(\"#dg_board\").datagrid({\r\n");
      out.write("\t\t\turl:\"/board/test.mo?crud=boardList&cb_search=\"+cb_value\r\n");
      out.write("\t\t\t\t\t+\"&keyword=\"+tb_value\r\n");
      out.write("\t\t\t\t\t+\"&pageNumber=1\"\r\n");
      out.write("\t\t\t\t\t+\"&pageSize=2\"\r\n");
      out.write(" \t\t\t,onLoadSuccess: function data() {\r\n");
      out.write("\t\t\t\t//alert(\"load success!\");\r\n");
      out.write("\t\t\t\tuser_combo='';\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl:\"test.mo?crud=total&cb_search=\"+cb_value\r\n");
      out.write("\t\t\t\t\t\t+\"&keyword=\"+tb_value\r\n");
      out.write("\t\t\t\t\t\t+\"&timestamp=\"+new Date().getTime()\r\n");
      out.write("\t\t\t\t\t,method:\"get\"\r\n");
      out.write("\t\t\t\t\t,success:function(data){\r\n");
      out.write("\t\t\t\t\t\talert(data);\r\n");
      out.write("\t\t\t\t\t\t$(\"#pn_board\").pagination({\r\n");
      out.write("\t\t\t\t\t\t\ttotal:data\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tuser_combo ='';\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\tfunction pageMove(pageNumber,pageSize){\r\n");
      out.write("        //alert(pageNumber+\", \"+pageSize);\r\n");
      out.write("        $(\"#dg_board\").datagrid({\r\n");
      out.write("        \turl:\"/board/test.mo?crud=boardList&pageNumber=\"+pageNumber+\"&pageSize=\"+pageSize\r\n");
      out.write("        });\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction addForm(){\r\n");
      out.write("\t\t//alert();\r\n");
      out.write("\t\t$(\"#dlg_boardAdd\").dialog('open');\r\n");
      out.write("\t};\r\n");
      out.write("\tfunction updForm(){\r\n");
      out.write("\t\talert();\r\n");
      out.write("\t};\r\n");
      out.write("\tfunction delForm(){\r\n");
      out.write("\t\talert();\r\n");
      out.write("\t};\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onLoad=\"boardList()\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t//전역변수 선언위치\r\n");
      out.write("\t//목록화면에서 사용자가 제목을 더블클릭 했을때 셀에 대한 정보만 들어있으므로\r\n");
      out.write("\t//선택한 로우에 숫자값을 가지고 숨어있는 필드 bm_no값을 가져와서 담는다.\r\n");
      out.write("\tvar g_no\r\n");
      out.write("\tvar user_combo;//콤보박스에서 선택한 값 담기\r\n");
      out.write("/* ==========================[날짜 기본 포맷을 재정의]========================== */\r\n");
      out.write("\t$.fn.datebox.defaults.formatter = function(date){\r\n");
      out.write("\t\tvar y = date.getFullYear();\r\n");
      out.write("\t\tvar m = date.getMonth()+1;\r\n");
      out.write("\t\tvar d = date.getDate();\r\n");
      out.write("\t\treturn y+'-'+(m<10?\"0\"+m:m)+'-'+(d<10?\"0\"+d:d);\r\n");
      out.write("\t}\r\n");
      out.write("\t$.fn.datebox.defaults.parser = function(s){\r\n");
      out.write("\t\tvar t = Date.parse(s);\r\n");
      out.write("\t\tif (!isNaN(t)){\r\n");
      out.write("\t\t\treturn new Date(t);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\treturn new Date();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("/* ==========================[datagrid 초기화 및 설정]========================== */\r\n");
      out.write("\t\t$(\"#dg_board\").datagrid({\r\n");
      out.write("\t\t\t rownumbers:\"true\"\r\n");
      out.write("\t\t\t,columns:[[\r\n");
      out.write("\t\t        {field:'BM_NO',title:'글번호',width:100, hidden:'true'}\r\n");
      out.write("\t\t       ,{field:'BM_TITLE',title:'제목',width:350}\r\n");
      out.write("\t\t       ,{field:'BM_WRITER',title:'작성자',width:100,align:'center'}\r\n");
      out.write("\t\t       ,{field:'BM_DATE',title:'작성일',width:100,align:'center'}\r\n");
      out.write("\t\t       ,{field:'BS_FILE',title:'첨부파일',width:100,align:'left'}\r\n");
      out.write("\t\t       ,{field:'BM_HIT',title:'조회수',width:100,align:'center'}\r\n");
      out.write("\t\t\t]]\r\n");
      out.write("\t\t\t,onSelect:function(index,row){\r\n");
      out.write("\t\t\t\t//alert(row.BM_NO);\r\n");
      out.write("\t\t\t\tg_no = row.BM_NO;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t,onDblClickCell: function(index,field,value){\r\n");
      out.write("\t\t\t\t//제목을 더블클릭\r\n");
      out.write("\t\t\t\tif(\"BM_TITLE\"==field){\r\n");
      out.write("\t\t\t\t\t//alert(\"제목: \"+value);\r\n");
      out.write("\t\t\t\t\tcommon_window_popup(\"test.mo?crud=boardDetail&bm_no=\"+g_no,\"900\",\"650\",\"read\");\r\n");
      out.write("\t\t\t\t\t//선택한 로우값 초기화\r\n");
      out.write("\t\t\t\t\t$(\"#dg_board\").datagrid('clearSelections');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t//첨부파일 더블클릭\r\n");
      out.write("\t\t\t\telse if(\"BS_FILE\"==field){\r\n");
      out.write("\t\t\t\t\t//alert(\"파일명: \"+value);\r\n");
      out.write("\t\t\t\t\tlocation.href=\"download.jsp?bs_file=\"+value;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}//end of onDdlClickCell\r\n");
      out.write("\t\t});\r\n");
      out.write("/* ==========================[combobox 이벤트 처리]========================== */\r\n");
      out.write("\t\t$(\"#cb_search\").combobox({\r\n");
      out.write("\t\t\tonChange:function(){\r\n");
      out.write("\t\t\t\tuser_combo = $(this).combobox('getValue');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("/* ==========================[pagination 이벤트 처리]========================== */\t\r\n");
      out.write("\t\t$('#pn_board').pagination({\r\n");
      out.write("\t\t\ttotal:");
      out.print(tot);
      out.write("\r\n");
      out.write("\t\t\t,pageSize:2\r\n");
      out.write("\t\t    ,pageList: [2,3,5,10]\r\n");
      out.write("\t\t//pageNumber:현재 내가 바라보는 페이지\r\n");
      out.write("\t\t//pageSize:한 페이지에 뿌릴 로우 수\r\n");
      out.write("\t\t   ,onSelectPage: function(pageNumber, pageSize){\r\n");
      out.write("               pageMove(pageNumber,pageSize);\r\n");
      out.write("           }\r\n");
      out.write("\t\t});\r\n");
      out.write("/* ==========================[textbox 엔터 이벤트 처리]========================== */\r\n");
      out.write("\t\t$(\"#keyword\").textbox('textbox').bind('keydown',function(e){\r\n");
      out.write("\t\t\tif(e.keyCode==13){\r\n");
      out.write("\t\t\t\t//alert(\"엔터이벤트\");\r\n");
      out.write("\t\t\t\t$(\"#dg_board\").datagrid({\r\n");
      out.write("\t\t\t\t\turl:\"test.mo?crud=boardList&cb_search=\"+user_combo+\"&keyword=\"+$(\"#keyword\").val()\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});//end of ready\r\n");
      out.write("</script>\r\n");
      out.write("<!--==========================[글목록화면 시작]==========================\r\n");
      out.write("jEasyui의 DataGrid API를 활용하여 작성\t\r\n");
      out.write("1)익스프레션을 이용하여 화면 처리\r\n");
      out.write("\t:tr, td태그를 직접 작성해서 처리하는 방식\r\n");
      out.write("2)json포맷으로 처리해서 매핑\r\n");
      out.write("\t:field명만 맞춰주면 자동으로 매핑\r\n");
      out.write("-->\r\n");
      out.write("<table id=\"dg_board\" class=\"easyui-datagrid\" title=\"글목록\" style=\"width:800px;height:400px\"\r\n");
      out.write(" data-options=\"toolbar:'#tb_board,#tb_search',footer:'#pn_board'\"></table>\r\n");
      out.write("<!--==========================[페이지 네이션 추가]==========================-->\r\n");
      out.write("<div id=\"pn_board\" class=\"easyui-pagination\" style=\"background:#efefef;border:1px solid #ccc;\"></div>\r\n");
      out.write("<!-- 조건검색 추가(툴바하기) -->\r\n");
      out.write("<div id=\"tb_search\" style=\"padding:2px 5px;\">\r\n");
      out.write("\t<select id=\"cb_search\" name=\"cb_search\" class=\"easyui-combobox\" panelHeight=\"auto\" style=\"width:100px\">\r\n");
      out.write("\t\t<option selected value=\"\">선택</option>\r\n");
      out.write("\t\t<option value=\"bm_title\">제목</option>\r\n");
      out.write("\t\t<option value=\"bm_content\">내용</option>\r\n");
      out.write("\t\t<option value=\"bm_writer\">작성자</option>\r\n");
      out.write("\t</select>\r\n");
      out.write("\t<input class=\"easyui-textbox\" id=\"keyword\" name=\"keyword\" style=\"width:320px\">\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t작성일:<input class=\"easyui-datebox\" id=\"bm_date\" name=\"bm_date\" style=\"width:120px\">\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"tb_board\" style=\"padding:2px 5px;\">\r\n");
      out.write("\t<a href=\"javascript:boardList()\" class=\"easyui-linkbutton\" iconCls='icon-search' plain=\"true\">조회</a>\r\n");
      out.write("\t<a href=\"javascript:addForm()\" class=\"easyui-linkbutton\" iconCls='icon-edit' plain=\"true\">입력</a>\r\n");
      out.write("\t<a href=\"javascript:updForm()\" class=\"easyui-linkbutton\" iconCls='icon-add' plain=\"true\">수정</a>\r\n");
      out.write("\t<a href=\"javascript:delform()\" class=\"easyui-linkbutton\" iconCls='icon-remove' plain=\"true\">삭제</a>\r\n");
      out.write("</div>\r\n");
      out.write("<!--==========================[글목록화면 끝   ]==========================-->\r\n");
      out.write("\r\n");
      out.write("<!--==========================[글쓰기화면 시작]==========================\r\n");
      out.write("jEasyui의 Dialog API를 활용하여 작성\r\n");
      out.write("-->\r\n");
      out.write("<div id=\"dlg_boardAdd\" title=\"글쓰기\" class=\"easyui-dialog\" data-options=\"closed:'true', modal:'true', footer:'#tbar_boardAdd'\">\r\n");
      out.write("<!-- form전송 -->\t\r\n");
      out.write("\t<form id=\"f_boardAdd\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"bm_no\" value=\"0\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"bm_group\" value=\"0\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"bm_pos\" value=\"0\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"bm_step\" value=\"0\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=\"100px\">제목</td>\r\n");
      out.write("\t\t\t\t<td width=\"500px\">\r\n");
      out.write("\t\t\t\t\t<input class=\"easyui-textbox\" id=\"bm_title\" name=\"bm_title\" data-options=\"width:'400px'\" required>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=\"100px\">작성자</td>\r\n");
      out.write("\t\t\t\t<td width=\"500px\">\r\n");
      out.write("\t\t\t\t\t<input class=\"easyui-textbox\" id=\"bm_writer\" name=\"bm_writer\" data-options=\"width:'200px'\" required>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=\"100px\">이메일</td>\r\n");
      out.write("\t\t\t\t<td width=\"500px\">\r\n");
      out.write("\t\t\t\t\t<input class=\"easyui-textbox\" id=\"bm_email\" name=\"bm_email\" data-options=\"width:'300px'\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=\"100px\">내용</td>\r\n");
      out.write("\t\t\t\t<td width=\"500px\">\r\n");
      out.write("\t\t\t\t\t<input class=\"easyui-textbox\" id=\"bm_content\" name=\"bm_content\" data-options=\"multiline:'true',width:'400px',height:'150px'\" required>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=\"100px\">비번</td>\r\n");
      out.write("\t\t\t\t<td width=\"500px\">\r\n");
      out.write("\t\t\t\t\t<input class=\"easyui-passwordbox\" id=\"bm_pw\" name=\"bm_pw\" data-options=\"width:'200px'\" required>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=\"100px\">첨부파일</td>\r\n");
      out.write("\t\t\t\t<td width=\"500px\">\r\n");
      out.write("\t\t\t\t\t<input class=\"easyui-filebox\" id=\"bs_file\" name=\"bs_file\" data-options=\"width:'300px'\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 입력 화면 버튼 추가 -->\r\n");
      out.write("<div id=\"tbar_boardAdd\" align=\"right\">\r\n");
      out.write("\t<a href=\"javascript:addAction()\" class=\"easyui-linkbutton\" iconCls=\"icon-save\">저장</a>\r\n");
      out.write("\t<a href=\"javascript:$('#dlg_boardAdd').dialog('close')\"\r\n");
      out.write("\t   class=\"easyui-linkbutton\" iconCls=\"icon-cancel\">닫기</a>\r\n");
      out.write("</div> \r\n");
      out.write("<!--==========================[글쓰기화면 끝   ]==========================-->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
